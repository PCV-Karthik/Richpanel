{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/Desktop/Code/Richpanel/frontend/src/Pages/SelectionPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectionPage = () => {\n  _s();\n  const [period, setPeriod] = useState(\"Montly\");\n  const [plans, setPlans] = useState([]);\n  const fetchPlans = async () => {\n    console.log(\"loading\");\n    try {\n      const {\n        data\n      } = await axios.get(`user/plans?period=${period}`);\n      setPlans(data);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchPlans(period);\n  }, [period]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box flexCol\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: \"Choose the right plan for you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexCol\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabs flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex tabList flexCenter\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: period == \"Montly\" ? \"tab selected\" : \"tab\",\n                onClick: () => {\n                  setPeriod(\"Montly\");\n                },\n                children: \"Montly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: period == \"Yearly\" ? \"tab selected\" : \"tab\",\n                onClick: () => {\n                  setPeriod(\"Yearly\");\n                },\n                children: \"Yearly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableData fill underline\",\n            children: \"Montly price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableData fill underline\",\n            children: \"Video Quality\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableData fill underline\",\n            children: \"Resolution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableData fill\",\n            children: \"Devices you can use to watch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), plans.map((plan, id) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: selectedPlan == plan.name ? \"flexCol textCenter fill\" : \"flexCol textCenter\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tableHeading flexCol flexCenter\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tableHeadingData flex flexCenter\",\n                children: plan.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"down-arrow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tableData underline\",\n              children: plan.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tableData underline\",\n              children: plan.quality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tableData underline\",\n              children: plan.resolution\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: plan.devices.map((device, id) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tableData textCenter\",\n                  children: device\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 31\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectionPage, \"mBrUGywNZR2iqam0HNVAm5wpDr0=\");\n_c = SelectionPage;\nexport default SelectionPage;\nvar _c;\n$RefreshReg$(_c, \"SelectionPage\");","map":{"version":3,"names":["React","axios","useState","useEffect","jsxDEV","_jsxDEV","SelectionPage","_s","period","setPeriod","plans","setPlans","fetchPlans","console","log","data","get","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","plan","id","selectedPlan","name","price","quality","resolution","devices","device","_c","$RefreshReg$"],"sources":["/Users/karthik/Desktop/Code/Richpanel/frontend/src/Pages/SelectionPage.js"],"sourcesContent":["import React from 'react'\nimport axios from \"axios\"\nimport { useState, useEffect } from 'react'\n\nconst SelectionPage = () => {\n  const [period,setPeriod] = useState(\"Montly\");\n  const [plans,setPlans] = useState([])\n  const fetchPlans = async ()=>{\n    console.log(\"loading\");\n    try {\n      const { data } = await axios.get(`user/plans?period=${period}`);\n      setPlans(data);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchPlans(period);\n  }, [period])\n  \n  return (\n    <div className=\"container flex\">\n      <div className=\"box flexCol\">\n        <div className=\"heading\">Choose the right plan for you</div>\n        <div className=\"flex\">\n          <div className=\"flexCol\">\n            <div className=\"tabs flex\">\n              <div className=\"flex tabList flexCenter\">\n                <button className={period == \"Montly\" ? \"tab selected\" : \"tab\"} onClick={()=>{\n                  setPeriod(\"Montly\")\n                }}>Montly</button>\n                <button className={period == \"Yearly\" ? \"tab selected\" : \"tab\"} onClick={()=>{\n                  setPeriod(\"Yearly\")\n                }}>Yearly</button>\n              </div>\n            </div>\n\n            <div className=\"tableData fill underline\">Montly price</div>\n            <div className=\"tableData fill underline\">Video Quality</div>\n            <div className=\"tableData fill underline\">Resolution</div>\n            <div className=\"tableData fill\">Devices you can use to watch</div>\n          </div>\n          {\n            plans.map((plan,id)=>{\n              return (\n              <div className={selectedPlan == plan.name ?  \"flexCol textCenter fill\" :   \"flexCol textCenter\"} key={id}>\n                  <div className='tableHeading flexCol flexCenter'>\n                    <div className=\"tableHeadingData flex flexCenter\">{plan.name}</div>\n                    <div className=\"down-arrow\"></div>\n                  </div>\n                  <div className=\"tableData underline\">{plan.price}</div>\n                  <div className=\"tableData underline\">{plan.quality}</div>\n                  <div className=\"tableData underline\">{plan.resolution}</div>\n                  <div>\n                    {\n                    plan.devices.map((device,id)=>{\n                      return (<div className=\"tableData textCenter\" key={id}>{device}</div>)\n                    })\n                    }\n                  </div>\n              </div>)\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SelectionPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}